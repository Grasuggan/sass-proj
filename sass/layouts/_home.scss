@use "../abstracts" as *;

.hero {
  margin-bottom: var(--section-spacing);
  display: grid;
  gap: 1em;
  grid-template-areas:
    "heading"
    "image"
    "paragraph";

  @include mq(small) {
    grid-template-areas:
      "image heading"
      "paragraph paragraph";
  }
  @include mq(medium) {
    grid-template-areas:
      "image heading"
      "image paragraph";
  }

  &__title {
    grid-area: heading;
    font-size: var(--fs-600);
    color: var(--clr-neutral-100);
    padding: 0.5rem 0;
  }

  &__paragraph {
    grid-area: paragraph;
  }

  picture {
    overflow: hidden;
    border-radius: 0.5em;
    border: 0.5em solid white;
    grid-area: image;
    background: white;
    align-self: start;

    box-shadow: 0 0.5em 1em rgba(black, 0.15);

    & > img {
      border-radius: 0.25em;
      width: inherit;
      height: 100%;
      max-width: inherit;
      max-height: inherit;
      min-width: inherit;
      object-fit: cover;
      object-position: center;
    }

    @include mq(small) {
      width: 25vw;
      height: 100%;
      min-width: 15rem;
      max-width: 17.5rem;
      max-height: 25rem;
    }
  }

  @include pseudo(
    $top: -0.5em,
    $bottom: -0.5em,
    $left: -0.5em,
    $right: -0.5em
  ) {
    background-color: var(--clr-primary-400);
    background-image: linear-gradient(
      145deg,
      var(--clr-cauliflower-400),
      var(--clr-primary-300)
    );
    grid-row: 1 / 2;
    z-index: -1;
    border-radius: 1em;
  }
}

.home-section {
  header {
    width: max-content;
    text-align: right;
  }

  padding: var(--section-spacing) 0;

  & h2 {
    font-size: var(--fs-700);
    color: var(--clr);
    line-height: 0.8;

    & + p {
      --font-weight: 300;
      color: var(--clr-neutral-700);
      margin-top: 0;
      // background: var(--clr);
      // width: max-content;
      // padding: .25em 1.25em;
      font-size: 0.85em;
      border-radius: 0.4em;
      margin-bottom: 2em;
    }
  }
}

.home-section.cauliflower {
  background-image: linear-gradient(
    120deg,
    var(--clr-neutral-100),
    var(--clr-cauliflower-100)
  );
}

.home-section.burritos {
  // --clr: white;
  color: var(--clr-neutral-100);
  background-color: var(--clr-burritos-400);
  background-image: linear-gradient(
    120deg,
    var(--clr-beetroot-400),
    var(--clr-burritos-400)
  );

  a:not([class]) {
    color: white;
  }
}

.split {
  min-height: min-content;
  display: flex;
  flex-flow: row wrap;
  margin: 0 auto;

  .split__text {
    order: 2;
    width: 100%;
    display: flex;
    align-items: center;
    padding-right: 60px;

    .split__text-inner {
      padding-top: 0;
      padding-bottom: 0;
      max-width: 650px;
      flex-grow: 1;
    }
  }

  .split__image {
    width: 100%;
    min-height: 400px;
    display: flex;
    flex-flow: row wrap;
    border: 5px solid var(--clr-neutral-100);
    order: 1;

    .split__image-item {
      flex-grow: 1;
      width: 100%;
      min-height: 100%;
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      border: 5px solid var(--clr-neutral-100);
    }
  }

  &.split--text-right {
    .split__text {
      transform: translateX(0);
      padding-right: 60px;
      padding-left: 0;
    }
  }

  @include mq(medium) {
    .split__text {
      width: 50%;
      order: 1;
    }
    &.split--text-right {
      .split__text {
        transform: translateX(75px);
        padding-left: 60px;
        padding-right: 0;
        order: 2;
      }
    }
    .split__image {
      border: 5px solid var(--clr-neutral-100);
      width: 50%;
    }
  }
}

.scroller__inner {
  padding-block: 1rem;
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.scroller[data-animated="true"] {
  overflow: hidden;
  -webkit-mask: linear-gradient(
    90deg,
    transparent,
    white 20%,
    white 80%,
    transparent
  );
  mask: linear-gradient(90deg, transparent, white 20%, white 80%, transparent);
}

.scroller[data-animated="true"] .scroller__inner {
  width: max-content;
  flex-wrap: nowrap;
  animation: scroll var(--_animation-duration, 40s)
    var(--_animation-direction, forwards) linear infinite;
}

.scroller[data-direction="right"] {
  --_animation-direction: reverse;
}

.scroller[data-direction="left"] {
  --_animation-direction: forwards;
}

.scroller[data-speed="fast"] {
  --_animation-duration: 20s;
}

.scroller[data-speed="slow"] {
  --_animation-duration: 60s;
}

@keyframes scroll {
  to {
    transform: translate(calc(-50% - 0.5rem));
  }
}
